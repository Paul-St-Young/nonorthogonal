def mno_basis(nz=3):
  """ return a truncated BFD basis set for carbon
  nz = 2 double-zeta 
     = 3 triple-zeta etc. 
  """
  from pyscf.gto.basis import parse
  if nz == 2:
    mn_3d_idx = [12,46]
    basis={ # truncated BFD double-zeta from L.K. Wagner
  'Mn':parse('''
  Mn s
    23.6450680 -0.014659 
    13.4620290 0.223661 
    8.21262900 -0.564535 
    1.85994300 0.554600 
    0.88975400 0.534536 
    0.42256000 0.142766 
   Mn p
    17.8033170 0.003171 
    8.83499500 -0.080060 
    4.16134000 0.185735 
    2.12919600 0.375367 
    1.06371300 0.388624 
    0.51014100 0.192450 
    0.21130200 0.026146 
   Mn d
    9.25373600 0.076285 
    4.36301600 0.247722 
    1.83482100 0.330050 
    0.75611800 0.334518 
    0.29609200 0.263545 
   Mn f
    1.0998003483 1.00000 
   Mn s
  0.2 1.0
   Mn s
  0.6000000000000001 1.0
   Mn p
  0.2 1.0
   Mn p
  0.6000000000000001 1.0
   Mn d
  0.2 1.0
   Mn d
  0.6000000000000001 1.0
  '''),
  'O':parse('''
  O s
    0.268022 0.304848 
    0.573098 0.453752 
    1.225429 0.295926 
    2.620277 0.019567 
    5.602818 -0.128627 
    11.980245 0.012024 
    25.616801 0.000407 
    54.775216 -0.000076 
   O p
    0.333673 0.255999 
    0.666627 0.281879 
    1.331816 0.242835 
    2.660761 0.161134 
    5.315785 0.082308 
    10.620108 0.039899 
    21.217318 0.004679 
   O d
    0.669340 1.000000 
   O f
    1.423104 1.000000 
   O s
  0.2 1.0
   O s
  0.6000000000000001 1.0
   O p
  0.2 1.0
   O p
  0.6000000000000001 1.0
  ''')
    }
  elif (nz==3):
    mn_3d_idx = [16, 70]
    basis = { # BFD triple zeta, truncated exp<0.2
      'Mn':parse('''
Mn s
23.645068     -0.014659
13.462029     0.223661
8.212629     -0.564535
1.859943     0.554600
0.889754     0.534536
0.422560     0.142766
Mn s
23.645068     0.001613
13.462029     -0.047599
8.212629     0.136570
1.859943     -0.160624
0.889754     -0.264489
0.422560     -0.060593
Mn s
23.645068     -0.040623
13.462029     -0.045716
8.212629     0.504797
1.859943     -1.831860
0.889754     0.491612
0.422560     1.193469
Mn s
23.645068     0.162229
13.462029     -0.409782
8.212629     -0.089043
1.859943     3.105762
0.889754     -4.484535
0.422560     1.708160
Mn p
17.803317     0.003171
8.834995     -0.080060
4.161340     0.185735
2.129196     0.375367
1.063713     0.388624
0.510141     0.192450
0.211302     0.026146
Mn p
17.803317     -0.004080
8.834995     0.117011
4.161340     -0.361627
2.129196     -0.563508
1.063713     0.102395
0.510141     0.571356
0.211302     0.310046
Mn p
17.803317     0.005030
8.834995     -0.156795
4.161340     0.602679
2.129196     0.513609
1.063713     -0.908215
0.510141     -0.418146
0.211302     0.371296
Mn p
17.803317     0.014899
8.834995     0.225576
4.161340     -1.784375
2.129196     1.175073
1.063713     1.191127
0.510141     -1.327791
0.211302     -0.567365
Mn d
9.253736     0.076285
4.363016     0.247722
1.834821     0.330050
0.756118     0.334518
0.296092     0.263545
Mn d
9.253736     -0.085874
4.363016     -0.354436
1.834821     -0.361447
0.756118     0.126629
0.296092     0.481402
Mn d
9.253736     -0.091633
4.363016     -0.585058
1.834821     0.047403
0.756118     0.839531
0.296092     -0.138765
Mn f
1.099800     1.000000
Mn f
3.815756     1.000000
Mn g
3.070103     1.000000
      '''),
      'O':parse('''
O s
0.268022     0.304848
0.573098     0.453752
1.225429     0.295926
2.620277     0.019567
5.602818     -0.128627
11.980245     0.012024
25.616801     0.000407
54.775216     -0.000076
O s
1.686633     1.000000
O s
0.237997     1.000000
O p
0.333673     0.255999
0.666627     0.281879
1.331816     0.242835
2.660761     0.161134
5.315785     0.082308
10.620108     0.039899
21.217318     0.004679
O p
0.600621     1.000000
O d
0.669340     1.000000
O d
2.404278     1.000000
O f
1.423104     1.000000
      ''')
    }
  elif (nz==4):
    raise NotImplementedError('sorry: I was too lazy to copy over the BFD QZ basis')
  else:
    raise RuntimeError('nz must be one of 2 (doulbe zeta), 3 (triple zeta) or 4 (quadruple zeta)')
  # end if
  return basis, mn_3d_idx
# end def mno_basis
