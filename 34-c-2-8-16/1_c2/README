a-hf: perform resitricted Hatree-Fock using PySCF
  `python main.py`

  prerequisite: None
  result 1: bfd.h5, PySCF chkfile containing cell and scf record
  result 2: fock.h5, a copy of bfd.h5, but has integrals 'hcore' and 'fock' added to the scf record
  result 3: pyscf2qmcpack.h5, QMCPACK wavefunction file for Hatree-Fock determinant
  result 4: opt.xml & dmc.xml, QMCPACK inputs for Hatree-Fock wavefunction, h5 file href may need edit, jastrows are needed

  `python launch.py`
  need to manually set run_opt | run_dmc flag
   after optimization, manually set opt_wf_fname to obtain jastrows

  prerequisite: pyscf2qmcpack.h5, opt.xml & dmc.xml
  result 1: jopt.xml & jopt
  result 2: dmc.xml & jdmc

b-phf: perform projected Hatree-Fock multi-determinant optimization using phfmol
  `python run_phfmol.py`

  prerequisite: 
    bfd.h5, which contains: cell & scf record
    fock.h5, which contains: hcore & fock 
  result 1: dets folder, which contains the phfmol input

  `cd dets; phfmol.x`
  result: generate determinants in dets folder

  `python parse_phfmol.py`
  results:
    det_list.dat, the list of determinants generated by phfmol
    diag.dat, single determinant energies

c-dets: perform VMC calculations on each determinant using QMCPACK
  `python main.py`
  prerequisite: 
    bfd.h5, which contains: cell & scf record
    det_list.dat
  result: hii folder, which contains the VMC inputs, one for each determinant

  `python launch.py`
  result: run VMC calculations in the hii folder

